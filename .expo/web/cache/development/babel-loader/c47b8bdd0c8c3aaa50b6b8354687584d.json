{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/seehow/Documents/National University of Singapore/Modules/1920 Special Term/CP2106 Independent Software Development Project (Orbital)/CP2106_OrbitAroundFood/components/search.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\n\nfunction Search() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      searchString = _useState2[0],\n      setSearchString = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      searchHist = _useState4[0],\n      setSearchHist = _useState4[1];\n\n  var searchInputHandler = function searchInputHandler(input) {\n    return setSearchString(input);\n  };\n\n  var searchHandler = function searchHandler() {\n    if (isValidString(searchString)) {\n      search(searchString);\n      addSearchHist();\n    }\n  };\n\n  var search = function search(searchKey) {\n    console.log(\"Searching for: \" + searchKey);\n    return null;\n  };\n\n  var addSearchHist = function addSearchHist() {\n    setSearchHist(searchHist.filter(function (item) {\n      return item !== searchString;\n    }));\n    setSearchHist(function (currHist) {\n      return [searchString].concat(_toConsumableArray(currHist)).slice(0, 10);\n    });\n    setSearchString(\"\");\n  };\n\n  var clearHistory = function clearHistory() {\n    return setSearchHist([]);\n  };\n\n  var isValidString = function isValidString(str) {\n    return str.length > 0 && str.trim().length > 0;\n  };\n\n  var getKey = function getKey(objType) {\n    return objType + \"_\" + Math.floor(Math.random() * 10000);\n  };\n\n  return React.createElement(View, {\n    style: styles.screen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.searchBar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.inputContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"What do you wanna eat?\",\n    onChangeText: searchInputHandler,\n    value: searchString,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  })), React.createElement(View, {\n    style: styles.searchButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, React.createElement(Button, {\n    title: \"Find\",\n    onPress: searchHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }))), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.searchHistoryTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, \"Search history\")), React.createElement(ScrollView, {\n    style: styles.searchHistoryContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, searchHist.map(function (item) {\n    return React.createElement(TouchableOpacity, {\n      key: getKey(\"touchable_opacity\"),\n      onPress: function onPress() {\n        return searchInputHandler(item);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }\n    }, React.createElement(View, {\n      style: styles.searchHistoryText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 29\n      }\n    }, React.createElement(Text, {\n      key: getKey(\"search_history_text\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 33\n      }\n    }, item)));\n  })), React.createElement(Button, {\n    title: \"Clear search history\",\n    onPress: clearHistory,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  })));\n}\n\nvar styles = StyleSheet.create({\n  screen: {\n    paddingVertical: 50,\n    paddingHorizontal: 30\n  },\n  searchBar: {\n    paddingLeft: 10,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  inputContainer: {\n    width: '80%',\n    borderWidth: 2,\n    borderColor: 'grey',\n    borderRadius: 5,\n    padding: 10\n  },\n  searchButton: {\n    width: '20%'\n  },\n  searchHistoryTitle: {\n    paddingLeft: 1,\n    marginTop: 15,\n    marginBottom: 5,\n    fontWeight: 'bold'\n  },\n  searchHistoryContainer: {\n    marginLeft: 10\n  },\n  searchHistoryText: {\n    marginTop: 10,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: '#aaa',\n    borderRadius: 5,\n    width: '80%'\n  },\n  searchHistoryClearButton: {\n    justifyContent: 'space-around'\n  }\n});\nexport default Search;","map":{"version":3,"sources":["/Users/seehow/Documents/National University of Singapore/Modules/1920 Special Term/CP2106 Independent Software Development Project (Orbital)/CP2106_OrbitAroundFood/components/search.js"],"names":["React","useState","Search","searchString","setSearchString","searchHist","setSearchHist","searchInputHandler","input","searchHandler","isValidString","search","addSearchHist","searchKey","console","log","filter","item","currHist","slice","clearHistory","str","length","trim","getKey","objType","Math","floor","random","styles","screen","searchBar","inputContainer","searchButton","searchHistoryTitle","searchHistoryContainer","map","searchHistoryText","StyleSheet","create","paddingVertical","paddingHorizontal","paddingLeft","flexDirection","justifyContent","alignItems","width","borderWidth","borderColor","borderRadius","padding","marginTop","marginBottom","fontWeight","marginLeft","searchHistoryClearButton"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {StyleSheet, Text, TextInput, Button, View, ScrollView, TouchableOpacity} from 'react-native';\n\n\nfunction Search() {\n    const [searchString, setSearchString] = useState('');\n    const [searchHist, setSearchHist] = useState([]);\n\n    const searchInputHandler = input => setSearchString(input);\n\n    const searchHandler = () => {\n        if (isValidString(searchString)) {\n            search(searchString);\n            addSearchHist();\n            // do other stuff here\n        }\n        // else ignore the search string\n    }\n\n    const search = searchKey => {\n        console.log(\"Searching for: \" + searchKey);\n        return null;\n    };\n\n\n    const addSearchHist = () => {\n        setSearchHist(searchHist.filter(item => item !== searchString));\n        // removes preexisting items that are identical in search history\n\n        setSearchHist(currHist => [searchString, ...currHist].slice(0, 10));\n        // pre-append item to list\n\n        setSearchString(\"\");\n        // reset search item box to empty\n    };\n\n    const clearHistory = () => setSearchHist([]);\n    // clears search history\n\n    const isValidString = str => str.length > 0 && str.trim().length > 0;\n    // checks if string is valid\n\n    const getKey = objType => objType + \"_\" + Math.floor(Math.random() * 10000);\n    // creates key for object\n\n\n    return (\n        <View style={styles.screen}>\n\n            {/* search bar */}\n            <View style={styles.searchBar}>\n\n                <View style={styles.inputContainer}>\n                    <TextInput\n                        placeholder=\"What do you wanna eat?\"\n                        onChangeText={searchInputHandler}\n                        value={searchString}\n                    />\n                </View>\n\n                <View style={styles.searchButton}>\n                    <Button title=\"Find\" onPress={searchHandler}/>\n                </View>\n\n            </View>\n\n            {/*search history */}\n            <View>\n                <View style={styles.searchHistoryTitle}>\n                    <Text>Search history</Text>\n                </View>\n\n                <ScrollView style={styles.searchHistoryContainer}>\n                    {searchHist.map(item => (\n\n                        <TouchableOpacity\n                            key={getKey(\"touchable_opacity\")}\n                            onPress={() => searchInputHandler(item)}>\n\n                            <View style={styles.searchHistoryText}>\n                                <Text key={getKey(\"search_history_text\")}>\n                                    {item}\n                                </Text>\n                            </View>\n\n                        </TouchableOpacity>\n\n                    ))}\n                </ScrollView>\n\n                <Button title=\"Clear search history\" onPress={clearHistory}/>\n            </View>\n\n\n        </View>\n\n\n    );\n}\n\n\nconst styles = StyleSheet.create({\n    screen: {\n        paddingVertical: 50,\n        paddingHorizontal: 30,\n    },\n\n    searchBar: {\n        paddingLeft: 10,\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n    },\n\n    inputContainer: {\n        width: '80%',\n        borderWidth: 2,\n        borderColor: 'grey',\n        borderRadius: 5,\n        padding: 10,\n    },\n\n    searchButton: {\n        width: '20%',\n        // borderWidth: 2,\n        // borderColor: 'black',\n    },\n\n    searchHistoryTitle: {\n        paddingLeft: 1,\n        marginTop: 15,\n        marginBottom: 5,\n        fontWeight: 'bold',\n    },\n\n    searchHistoryContainer: {\n        marginLeft: 10,\n    },\n\n    searchHistoryText: {\n        marginTop: 10,\n        padding: 10,\n        borderWidth: 1,\n        borderColor: '#aaa',\n        borderRadius: 5,\n        width: '80%',\n    },\n\n    searchHistoryClearButton: {\n        justifyContent: 'space-around',\n    }\n})\n\n\nexport default Search;\n\n"]},"metadata":{},"sourceType":"module"}